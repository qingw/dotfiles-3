#!/bin/bash

pip2_apps=(
cider
pymysql
netaddr
simplejson
pyflakes
pylint
flake8
requests
powerline-status
celery[redis]
sqlalchemy
)

pip3_apps=(
)

mas_apps=(
409203825 # Numbers (4.3.1)
407963104 # Pixelmator (3.7)
836500024 # WeChat (2.3.9)
445189367 # PopClip (1.5.8)
497799835 # Xcode (9.2)
409183694 # Keynote (7.3.1)
409201541 # Pages (6.3.1)
433386677 # iPack (2.2.0)
720669838 # iThoughtsX (5.1)
557168941 # Tweetbot (2.5.4)
)

dirs=(
~/bin
~/.config
~/Library/Rime
~/.ssh
)

# check if ssh key exist
if ! [ -f "~/.ssh/id_rsa" ]; then
    echo "please copy your ssh key first"
    exit 1
fi

# get sudo access
echo "please input sudo password"
sudo /usr/bin/true
while /usr/bin/true; do
    sleep 300
    sudo -n /usr/bin/true
    /bin/kill -0 "$$" 2>/dev/null || exit
done &

# install xcode commandline tools
# if ! [ -d "/Library/Developer/CommandLineTools" ]; then
if ! /usr/sbin/pkgutil --pkg-info com.apple.pkg.CLTools_Executables; then
    echo "install Xcode CommandLine Tools"
    # This file prompts that Command Line Tools should be installed
    sudo /usr/bin/touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
    sudo /usr/sbin/softwareupdate -i "$(/usr/sbin/softwareupdate -l | /usr/bin/grep -B 1 -E "Command Line (Developer|Tools)" | /usr/bin/awk -F"*" '/^ +\\*/ {print $2}' | /usr/bin/sed 's/^ *//' | /usr/bin/tail -n1)"
    sudo /bin/rm -f /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
    # sudo /usr/bin/xcode-select --switch /Library/Developer/CommandLineTools
fi

# if ! [ -d "/Library/Developer/CommandLineTools" ]; then
if ! /usr/sbin/pkgutil --pkg-info com.apple.pkg.CLTools_Executables; then
    echo "install Xcode CommandLine Tools failed, Please install it manually"
    sudo /usr/bin/xoode-select --install
    exit 1
fi

# accept Xcode license
sudo xcodebuild -license accept

# install homebrew
if ! [ -f "/usr/local/bin/brew" ]; then
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

git clone git@github.com:SteamedFish/dotfiles.git
cd ~/dotfiles && git submodule update --init --recursive --remote

# install Xcode
/usr/local/bin/brew install mas
if ! /usr/local/bin/mas account; then
    /usr/local/bin/mas signin steamedfish@me.com
fi
xcode_id=$(/usr/local/bin/mas search Xcode | /usr/bin/grep -E '^[0-9]* *Xcode$' | /usr/bin/awk '{print $1}')
/usr/local/bin/mas install ${xcode_id}

# setup cider
/usr/local/bin/brew install python
/usr/local/bin/pip2 install cider
ln -s dotfiles/.cider ~/.cider
echo "restoreing cider"
/usr/local/bin/cider restore

for apps in ${pip2_apps[@]}; do
    pip2 install $apps
done

for apps in ${pip3_apps[@]}; do
    pip3 install $apps
done

for dir in ${dirs[@]}; do
    mkdir -p $dir
done

# iTerm shell integration
curl -L https://iterm2.com/shell_integration/install_shell_integration_and_utilities.sh | bash

for apps in ${mas_apps[@]}; do
    mas install $apps
done

if [[ "$(kextstat | grep "FakeSMC")" != "" ]]; then
    # disable computer sleep
    sudo pmset -a sleep 0
fi

open '/usr/local/Caskroom/lastpass/latest/LastPass Installer/LastPass Installer.app'

# add crontab for NetEase AUTH
if /sbin/ping -q -c 3 ita.netease.com > /dev/null ; then
    echo "* * * * * (/Users/steamedfish/bin/auth 2>&1 >/dev/null)" | crontab
fi
